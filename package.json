{
  "name": "opencollective-api",
  "version": "2.0.567",
  "description": "Open Collective API",
  "author": "@philmod @arnaudbenard @xdamman @asood123",
  "main": "server/index.js",
  "engines": {
    "node": "12.13.0",
    "npm": "6.12.0"
  },
  "dependencies": {
    "@babel/core": "7.11.1",
    "@babel/node": "7.10.5",
    "@babel/plugin-proposal-class-properties": "7.10.4",
    "@babel/plugin-transform-async-to-generator": "7.10.4",
    "@babel/preset-env": "7.11.0",
    "@babel/preset-typescript": "7.10.4",
    "@hyperwatch/hyperwatch": "3.7.0",
    "@octokit/auth-oauth-app": "3.0.5",
    "@octokit/rest": "18.0.3",
    "@opencollective/taxes": "2.4.1",
    "@paypal/payouts-sdk": "^1.0.0",
    "algoliasearch": "3.35.1",
    "apollo-server-express": "2.16.1",
    "argparse": "1.0.10",
    "aws-sdk": "2.732.0",
    "axios": "0.19.2",
    "babel-plugin-add-module-exports": "1.0.2",
    "babel-plugin-lodash": "3.3.4",
    "bcrypt": "5.0.0",
    "bluebird": "3.7.2",
    "burner-email-providers": "1.0.26",
    "cloudflare": "2.7.0",
    "cloudflare-ip": "0.0.7",
    "config": "3.3.1",
    "connect-redis": "5.0.0",
    "cookie-parser": "1.4.5",
    "cors": "2.8.5",
    "crypto-js": "4.0.0",
    "dataloader": "2.0.0",
    "dataloader-sequelize": "2.3.0",
    "debug": "4.1.1",
    "deepmerge": "4.2.2",
    "dotenv": "8.2.0",
    "errorhandler": "1.5.1",
    "express": "4.17.1",
    "express-basic-auth": "1.2.0",
    "express-graphql": "0.11.0",
    "express-limiter": "1.6.1",
    "express-server-status": "1.0.3",
    "express-session": "1.17.1",
    "express-ws": "4.0.0",
    "flat": "5.0.2",
    "forest-express-sequelize": "6.3.6",
    "fs-extra": "9.0.1",
    "graphql": "15.3.0",
    "graphql-iso-date": "3.6.1",
    "graphql-type-json": "0.3.2",
    "handlebars": "4.7.6",
    "hashids": "2.2.1",
    "helloworks-sdk": "1.2.1",
    "helmet": "4.0.0",
    "html-pdf": "2.2.0",
    "ics": "2.22.1",
    "intl-messageformat": "9.2.1",
    "isomorphic-fetch": "2.2.1",
    "json2csv": "5.0.1",
    "jsonwebtoken": "8.5.1",
    "juice": "7.0.0",
    "limax": "2.1.0",
    "lodash": "4.17.19",
    "lru-cache": "6.0.0",
    "memjs": "1.2.2",
    "merge-options": "2.0.0",
    "moment": "2.27.0",
    "moment-timezone": "0.5.31",
    "multer": "1.4.2",
    "node-fetch": "2.6.0",
    "node-slack": "0.0.7",
    "nodemailer": "6.4.11",
    "p-queue": "6.6.0",
    "p-throttle": "3.1.0",
    "passport": "0.4.1",
    "passport-github": "1.1.0",
    "passport-meetup-oauth2": "0.0.2",
    "passport-twitter": "1.0.4",
    "paypal-adaptive": "0.4.2",
    "pg": "8.3.0",
    "pg-connection-string": "2.3.0",
    "pg-format": "1.0.4",
    "prepend-http": "3.0.1",
    "redis": "3.0.2",
    "request-promise": "4.2.6",
    "sanitize-html": "1.27.3",
    "sequelize": "6.3.4",
    "sequelize-cli": "6.2.0",
    "sequelize-temporal": "1.0.8",
    "showdown": "1.9.1",
    "speakeasy": "2.0.0",
    "stripe": "8.84.0",
    "tweetnacl": "1.0.3",
    "tweetnacl-util": "0.15.1",
    "twitter": "1.7.1",
    "uuid": "8.3.0",
    "validator": "13.1.1",
    "winston": "3.3.3"
  },
  "devDependencies": {
    "@babel/cli": "7.10.5",
    "@babel/register": "7.10.5",
    "@typescript-eslint/eslint-plugin": "^3.9.0",
    "@typescript-eslint/parser": "^3.9.0",
    "babel-eslint": "^10.1.0",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-jest-snapshot": "^2.0.0",
    "codecov": "^3.7.2",
    "commitizen": "^4.1.2",
    "cz-conventional-changelog": "^3.2.0",
    "eslint": "^7.6.0",
    "eslint-config-opencollective": "^2.2.0",
    "eslint-plugin-babel": "^5.3.1",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-mocha": "8.0.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-react": "^7.20.6",
    "eslint-plugin-simple-import-sort": "^5.0.3",
    "husky": "^4.2.5",
    "lint-staged": "^10.2.11",
    "maildev": "^1.1.0",
    "mocha": "^8.1.1",
    "nock": "^13.0.3",
    "nodemon": "^2.0.4",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "otpauth": "6.0.6",
    "prettier": "2.0.5",
    "sinon": "^9.0.3",
    "supertest": "^4.0.2",
    "typescript": "^3.9.7"
  },
  "scripts": {
    "build": "npm run build:clean && npm run build:updates && npm run build:server",
    "build:clean": "rm -rf dist && mkdir dist",
    "build:server": "babel server --extensions .js,.ts -d ./dist",
    "build:updates": "npm --prefix node_modules/cloudflare-ip run update-list",
    "clean": "npm run build:clean && npm run test:clean",
    "commit": "git-cz",
    "compile:email": "babel-node --extensions .js,.ts scripts/compile-email.js",
    "compile:email:watch": "./scripts/watch_email_template.sh",
    "cron:10mn": "./scripts/cron.sh 10mn",
    "cron:daily": "./scripts/cron.sh daily",
    "cron:hourly": "./scripts/cron.sh hourly",
    "cron:monthly": "./scripts/cron.sh monthly",
    "cron:weekly": "./scripts/cron.sh weekly",
    "cron:yearly": "./scripts/cron.sh yearly",
    "db:clean": "babel-node --extensions .js,.ts ./scripts/sanitize-db.js",
    "db:copy:prod": "./scripts/db_copy_to_localhost.sh prod && PG_DATABASE=opencollective_prod_snapshot npm run db:sanitize",
    "db:copy:prod:staging": "./scripts/db_copy_prod_to_staging.sh opencollective-staging-api && heroku run npm run db:sanitize --app opencollective-staging-api",
    "db:copy:prod:staging-dev": "./scripts/db_copy_prod_to_staging.sh $DEV && heroku run npm run db:sanitize --app $DEV",
    "db:copy:staging": "./scripts/db_copy_to_localhost.sh staging",
    "db:migrate": "./scripts/sequelize.sh db:migrate",
    "db:migrate:undo": "./scripts/sequelize.sh db:migrate:undo",
    "db:migration:create": "./scripts/sequelize.sh migration:create",
    "db:restore": "./scripts/db_restore.sh",
    "db:restore:e2e": "npm run db:restore -- -d opencollective_e2e",
    "db:sanitize": "babel-node --extensions .js,.ts scripts/sanitize-db",
    "db:seed": "./scripts/sequelize.sh db:seed",
    "db:setup": "babel-node --extensions .js,.ts ./scripts/db_setup.js",
    "depcheck": "npx depcheck --specials babel,bin,commitizen,eslint,husky,lint-staged,mocha --ignore-dirs dist,dbdumps .",
    "deploy:production": "./scripts/pre-deploy.sh production && git push production master",
    "deploy:staging": "./scripts/pre-deploy.sh staging && git push -f staging master",
    "dev": "nodemon server/index.js -x \"babel-node --extensions .js,.ts\" . -e js,hbs,ts",
    "export:csv": "babel-node --extensions .js,.ts scripts/monthly_data_exports.js",
    "forestadmin-schema:update": "npm run script scripts/forestadmin-schema-update && prettier .forestadmin-schema.json --write",
    "git:clean": "./scripts/git_clean.sh",
    "hint": "npm run lint:quiet",
    "lint": "eslint . --ext='js,ts'",
    "lint:check": "npm run lint -- --quiet",
    "lint:fix": "npm run lint -- --fix",
    "maildev": "maildev",
    "postdb:migrate:dev": "npm run db:clean",
    "postinstall": "./scripts/postinstall.sh",
    "prettier": "prettier \"**/*.@(js|ts|json|md)\" --ignore-path .eslintignore",
    "prettier:check": "npm run prettier -- --check",
    "prettier:write": "npm run prettier -- --write",
    "refund-transactions": "babel-node --extensions .js,.ts ./scripts/add_refund_transactions_from_collective.js",
    "report": "node scripts/send_email_report_cli.js",
    "script": "babel-node --extensions .js,.ts $1",
    "sequelize": "babel-node --extensions .js,.ts -- ./node_modules/.bin/sequelize --config config/sequelize-cli.js",
    "start": "node ./dist/index.js",
    "start:e2e": "TZ=UTC NODE_ENV=e2e E2E_TEST=1 npm-run-all db:restore:e2e db:migrate build start:e2e:server",
    "start:e2e:server": "node ./dist/e2e.js",
    "test": "TZ=UTC nyc mocha",
    "test:clean": "rm -rf .nyc_output coverage",
    "test:coverage": "codecov",
    "test:graphql": "npm run test test/server/graphql",
    "test:lib": "npm run test test/server/lib",
    "test:models": "npm run test test/server/models",
    "test:payment-providers": "npm run test test/server/paymentProviders",
    "test:routes": "npm run test test/server/routes",
    "test:scripts": "npm run test test/scripts",
    "test:sql": "npm run test test/sql",
    "type:check": "tsc"
  },
  "nyc": {
    "reporter": [
      "lcov"
    ],
    "cache": true
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,json,md}": [
      "prettier --write"
    ]
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/opencollective/opencollective-api.git"
  },
  "heroku-run-build-script": true
}
